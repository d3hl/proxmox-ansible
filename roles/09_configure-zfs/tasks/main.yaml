- name: Check if zfs-zed service is active
  ansible.builtin.systemd:
    name: zfs-zed.service
    state: started
  register: zfs_zed_service
  ignore_errors: true

- name: Convert zfs_arc_min and zfs_arc_max from GB to bytes
  ansible.builtin.set_fact:
    zfs_arc_min_bytes: "{{ zfs_arc_min * 1024 * 1024 * 1024 - 1 }}"
    zfs_arc_max_bytes: "{{ zfs_arc_max * 1024 * 1024 * 1024 }}"
  when: zfs_arc_min is defined and zfs_arc_max is defined and zfs_zed_service is defined and zfs_zed_service.state == 'started'

- name: Set zfs_arc_min using echo command
  ansible.builtin.shell:
    cmd: echo "{{ zfs_arc_min_bytes }}" > /sys/module/zfs/parameters/zfs_arc_min
  when: zfs_arc_min_bytes is defined and zfs_zed_service is defined and zfs_zed_service.state == 'started'
  changed_when: false

- name: Set zfs_arc_max using echo command
  ansible.builtin.shell:
    cmd: echo "{{ zfs_arc_max_bytes }}" > /sys/module/zfs/parameters/zfs_arc_max
  when: zfs_arc_max_bytes is defined and zfs_zed_service is defined and zfs_zed_service.state == 'started'
  changed_when: false

- name: Create or update ZFS configuration
  ansible.builtin.copy:
    dest: /etc/modprobe.d/zfs.conf
    content: |
      options zfs zfs_arc_min={{ zfs_arc_min_bytes }}
      options zfs zfs_arc_max={{ zfs_arc_max_bytes }}
    owner: root
    group: root
    mode: '0644'
  when: zfs_arc_min_bytes is defined and zfs_arc_max_bytes is defined and zfs_zed_service is defined and zfs_zed_service.state == 'started'
  notify: "{{ 'Update GRUB' if boot_mode.stdout.strip() == 'bios' else 'Proxmox Boot Tool Refresh' }}"
